{:title  "A tour of Riemann"
 :layout :post
 :tags   ["tour-of-riemann" "clojure" "riemann" "english" "devops"]}

In this blog posts serie, i will present Riemann, an amazing monitoring tool.

Do you know  http://riemann.io/[Riemann] ?
It's an *amazing* tool, a stream processing engine to monitor your infrastucture.
Flexible, powerful, it can detects complex problems on your infrastructure, calculate statistics and fire alerts.
It integrates with many tools (InfluxDB, Kafka, Elasticsearch, Pagerduty...) and is highly costumizable.

Riemann configuration is code (real code, it's https://clojure.org[Clojure]).
You will quickly understand why Clojure is Riemann strength compared to a DSL.

I will not present Clojure, i advice you to get Clojure basics using these tutorials:

- http://riemann.io/clojure.html[Just enough Clojure to work with Riemann]

- https://aphyr.com/tags/Clojure-from-the-ground-up[Clojure from the ground up]

- http://www.braveclojure.com/clojure-for-the-brave-and-true/[Clojure for the brave and true]

Here are some useful links to work with Riemann. I will mostly show use cases on my tutorials,
it's a complement of the Riemann howto and not a replacement.
I will write unit tests for each use cases.

- The official http://riemann.io/howto.html[howto]

- The http://riemann.io/api.html[Riemann API], especially the `streams` and `folds` sections.

I will use https://collectd.org/[collectd] with the `write_riemann` plugin to gather system metrics.

Let's go !

Code https://github.com/mcorbin/riemann-configuration-example[here].