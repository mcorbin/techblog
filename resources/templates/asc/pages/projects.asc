{:title "Projects"
 :layout :page
 :page-index 1
 :navbar? true}

Here are some personal projects and some open source contributions. Not all contributions I made are listed here. Some of my work (especially on the Clojure ecosystem) can also be found on the https://github.com/exoscale/[Exoscale] Github organization.

== Clojure

I love Clojure. It's a fun, fast, powerful language but not very well known.

- http://tour.mcorbin.fr[Tour of Clojure] (https://github.com/mcorbin/tour-of-clojure[repo here]) is a interactive Clojure tutorial, currently only available in French (PR welcome for adding more lang !).

== Meuse

https://github.com/mcorbin/meuse[Meuse] is a Rust private registry.

It fully implements the Rust https://github.com/rust-lang/rfcs/blob/master/text/2141-alternative-registries.md[alternative registries] RFC and API and also exposes an API to manage users, crates, tokens and categories. Meuse can store the crates binary files in various backends (filesystem, S3â€¦).

It can also be used as a mirror for crates.io.

Check the https://meuse.mcorbin.fr/[website] of the project for more informations ;)

== Cabourotte

https://github.com/mcorbin/cabourotte[Cabourotte] is a modern monitoring tool written in Go which allows you to configure various kind of healthchecks of your infrastructure. +
It also has tons of cool features like an API to dynamically configure healthchecks, one-off healthcheck support, provides a lot of metrics, exporters to push healthchecks results on other systems...

You can also check the https://cabourotte.mcorbin.fr/[documentation website] for more information.

== Commentator

https://github.com/mcorbin/commentator[Commentator] is a commenting system where comments are stored on an S3 compatible storage. It includes features like rate limiting, challenges to avoid spammer, in-memory cache for comments, an API to manage and approve comments, a small event system...

It's what I use on this blog for comments.

== Mirabelle

https://github.com/mcorbin/mirabelle[Mirabelle] is a stream processing engine inspired by https://riemann.io/[Riemann], but with additionals capabilities. +

You can check the https://www.mirabelle.mcorbin.fr/[documentation website] for more information.

== Riemann

I contributed to the http://riemann.io/[Riemann] project and its ecosystem. +

Riemann is an amazing stream processing engine for monitoring. You push events to Riemann, and it calculates statistics on the fly (percentiles, rate, combine events from differents hosts...), does alerting, forwards events and alerts to external systems (Graphite, InfluxDB, Elasticsearch, Pagerduty...), and a lot more !

I worked on Riemann itself, and its ecosystem (clients in differents languages (Go, Clojure, Java,..), integration with other monitoring tools, documentation and helping users...).

I also wrote a couple of Riemann plugins:

- https://github.com/mcorbin/riemann-cond-dt-plugin[riemann-cond-dt]: A plugin for verifying that a condition on an event is true during a time period.
- https://github.com/mcorbin/riemann-discovery/[riemann-discovery]: Basic service discovery for Riemann.

=== My infrastructure

My websites are deployed in Exoscale virtual machines using Terraform and Ansible. Everything is open source:

- https://github.com/mcorbin/personal-terraform[My Terraform configuration]
- https://github.com/mcorbin/personal-ansible[My Ansible configuration]

=== Ansible roles and plugins

I used Ansible at my previous job almost everyday for years, and i decided to start sharing some Ansible roles and plugins:

- I wrote https://github.com/mcorbin/goss-ansible[goss-ansible], an Ansible module for https://github.com/aelsabbahy/goss[goss] at one of my previous job. It's a cool module for test driven infrastructure.
- I wrote an https://github.com/mcorbin/haproxy-ansible-role[HAProxy role] for Debian.
